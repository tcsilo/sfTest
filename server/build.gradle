apply plugin: 'com.github.johnrengelman.shadow'

description = "Next Gen Api"

dependencies {
    compile "com.spredfast.common:dropwizard:$sfCommonVersion"

    compile "io.dropwizard:dropwizard-core:$dropwizardVersion"
}

tasks.getByName("processResources").dependsOn("buildVersion")

tasks.withType(Jar) {
    manifest {
        attributes "Main-Class": 'com.spredfast.nextgenapi.dropwizard.NextGenApiServer',
                "Implementation-Version": project.version,
                "Implementation-Vendor": "Spredfast, Inc.",
                "Implementiation-Title": project.description
    }
}

task runServerImpl(type: JavaExec) {
    description = 'Run the Dropwizard service locally.'
    group = 'Development'
    main = 'com.spredfast.nextgenapi.dropwizard.NextGenApiServer'
    classpath = sourceSets.main.runtimeClasspath
    classpath += files('../deploy')
    args = ['server', 'src/main/resources/config/config.yml']
    debug = System.getProperty("sfDebug")!=null
}

task runServer(dependsOn: ['runServerImpl', 'classes']) {
    description = 'Runs the Dropwizard server.'
    group = 'Development'
}

def shadowFile = project.hasProperty('shadowFileName') ? project.shadowFileName : 'next-gen-api-shadow.jar'
def shadowBaseDir = new File(buildDir, "libs")

shadowJar {
    mergeServiceFiles()
    zip64 true
    archiveName = shadowFile
    destinationDir = shadowBaseDir
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
}

tasks['shadowJar'].dependsOn jar
